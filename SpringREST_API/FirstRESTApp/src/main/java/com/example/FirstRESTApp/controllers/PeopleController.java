package com.example.FirstRESTApp.controllers;

import com.example.FirstRESTApp.models.Person;
import com.example.FirstRESTApp.services.PeopleService;
import com.example.FirstRESTApp.util.PersonErrorResponse;
import com.example.FirstRESTApp.util.PersonNotFoundException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/people")
public class PeopleController {

    private final PeopleService peopleService;

    @Autowired
    public PeopleController(PeopleService peopleService) {
        this.peopleService = peopleService;
    }

    @GetMapping()
    public List<Person> takeAll(){
        return peopleService.findAll();    //Jackson вшитый в спринг веб зависимость конвертирует эти обьекты в Json
    }

    @GetMapping("/{id}")
    public Person takeOne(@PathVariable("id") int id) {
         return peopleService.findOne(id);     //Jackson конвертирует в Json
    }


@ExceptionHandler
    //этот метод будет ловить нужное нам исключение и возвращать клиенту необходимый джэйсон
    private ResponseEntity<PersonErrorResponse> handleException(PersonErrorResponse e) {
        PersonErrorResponse response = new PersonErrorResponse("Person with this id  was not found!", System.currentTimeMillis());   //это и будет преобразовано в JSON
        return new ResponseEntity<>(response, HttpStatus.NOT_FOUND);   //NOT_FOUND - 404 status
    }


}

// ===============начинка для чека==============
//create table Person(
//        id int generated by default as idenity primary key,
//        name varchar (100) not null
//        age int,
//        email varchar (100)
//);
//
//insert into Person (name,age,email) values ("test1", 20, "test_email1")